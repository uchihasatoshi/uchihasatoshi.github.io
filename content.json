[{"title":"从URL输入到页面展现","date":"2017-05-19T03:05:47.000Z","path":"2017/05/19/从URL到页面展现 - HTML/","text":"引言当我们在浏览网页的时候，往往只要在地址栏里输入网址，然后点击回车，页面就出现了。可是这个过程中到底经历了哪些过程，今天我来总结一下，主要包括了一下四个步骤。Ⅰ. 在浏览器输入URLⅡ. 域名解析Ⅲ. 服务器处理Ⅳ. 网站处理流程 Ⅰ. 输入URL首先，我们要在浏览器的地址栏里输入URL，比如 http://jirengu.com 。 问题1. URL是什么？URL（Uniform / Universal Resource Locator）统一资源定位符，用于定位互联网上的资源。URL 的标准格式如下：协议类型:[//服务器地址[:端口号]][/路径]文件名[?查询][#片段] Ⅱ. 域名解析对于 http://jirengu.com 这样的URL，浏览器实际上并不知道 jirengu.com 到底是什么东西，需要查找 jirengu.com 网站所在的服务的IP地址才能找到目标。域名解析就是把用户输入的域名解析为对于的IP地址。域名解析的过程： 浏览器缓存 —— 浏览器会缓存DNS记录一段时间。 系统缓存 —— 从本地的Hosts文件查找是否有该域名对应的IP。 路由器缓存 —— 一般路由器也会缓存域名信息。 ISP DNS缓存 —— 比如到电信的DNS上查找缓存。 如果上述都没有找到，则向根域名服务器查找域名对应的IP。根域名服务器把请求转发到下一级，直到找到IP。 问题1. 域名是什么？对于http://jirengu.com:8080/blog , jirengu.com就是域名。问题2. 为什么要用域名，不用IP？域名好记，IP不容易记住。问题3. IP地址是什么？每个处于互联网中的设备都有对应的IP地址，比如 192.168.0.1局域网IP和公网IP是有差别的。 Ⅲ. 服务器处理服务器是一台安装系统的机器（可以简单理解为就是一台电脑）。常见的系统如Linux，windows server 2012。系统里安装的处理请求的应用叫Web server。web服务器 常见的web服务器有 Apache，Nginx，IIS，Lighttpd。 Web服务器接受用户的Request（请求）交给网站代码。或者接受请求后反向代理到其他Web服务器。 Ⅳ. 网站处理流程MVC模式模型(model)-视图(view)-控制器(controller) 浏览器处理HTML字符串被浏览器接受后被一句句读取解析。解析到link 标签后重新发送请求获取css。解析到 script标签后发送请求获取 js，并执行代码。解析到img 标签后发送请求获取图片资源。 绘制网页浏览器根据 HTML 和 CSS 计算得到渲染树，绘制到屏幕上。js 会被执行。","tags":[{"name":"HTML","slug":"HTML","permalink":"www.animepc.me/tags/HTML/"}]},{"title":"如何用命令行登陆阿里云服务器","date":"2017-05-16T02:23:05.000Z","path":"2017/05/16/如何用命令行登陆阿里云服务器- 命令行/","text":"如何登陆 使用账号和密码登陆 在命令行git bash中运行：ssh 账户名@IP地址（例如：ssh student@101.200.33.143）然后输入密码。 出现的问题问题1：命令行上输入不上去密码，为什么光标|在闪却输入不了密码？解决方法：并不是输入不上去。密码已输入，只是在终端上没有显示出来而已。所以只要输入正确的密码就可以登陆上去。 免密码登陆 在命令行git bash中运行：ssh-copy-id 账户名@IP地址（例如：ssh student@101.200.33.143）然后输入密码。以后就不用输入密码了。 如何退出登陆 在登陆状态下输入 exit 。就可以完成退出。 以上です！","tags":[{"name":"命令行","slug":"命令行","permalink":"www.animepc.me/tags/命令行/"}]},{"title":"博客搭建过程记录","date":"2017-05-15T13:42:08.000Z","path":"2017/05/15/博客搭建过程记录- 随笔/","text":"引言从自学前端开始，就一直想做一个博客，用来记录自己在自学过程中遇到的问题，学到的技术等等，可是一直也不知道该怎么搭建，所以就一直使用着各种在线的博客，比如：简书 随着自学的深入，学会了如何搜索这个技能，我就搜了网上的一些博客搭建的教程。跟着教程一步一步的搭建出了自己的博客。 下面就把自己搭建博客的步骤来记录一下。 前期准备 GitHub的账号 安装Git 安装node.js 1.Github的账号GitHub官网首先进入GitHub官网，注册自己的GitHub账号。已有账号的可跳过这一步。 2.安装Git下载安装Git上面是Windows版的Git下载地址，下载后按默认选项安装即可。安装完成后，可以在开始菜单里找到“Git”-&gt;“Git Bash”。已安装Git的可跳过这一步。 3.安装node.js下载安装node.js下载安装好node。可以打开 Git Bash 输入（注：$ 不用打，只是为了跟命令行里看起来一样, 以后不再赘述）1$ node -v 查看node的版本，以确认自己安装完成。已安装node.js的可跳过这一步。 创建Github仓库打开GitHub，点击 New repository，创建一个新的仓库。在Repository name里填仓库的名字。yourname 改为你自己的用户名，比如我的是：uchihasatoshi.github.io 配置hexo1. 安装hexo首先在你认为合适的地方创建一个文件夹。比如hexo。右击 hexo 文件夹，选择 Git Bash here。此时就打开了 git bash ，然后依次输入下面的命令：1$ npm install hexo-cli -g 1$ npm install hexo --save 1$ hexo -v 当看到类似上图的信息时，说明hexo安装成功。 2. 配置hexo对hexo进行初始化。继续输入命令：1$ hexo init 1$ npm install 此时，只需要等待npm自动安装完成需要的组件即可。 3. 本地运行hexo在命令行中，继续输入命令：1$ hexo g 1$ hexo s 然后会在命令行中得到提示：1INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. 按照提示打开网址：http://0.0.0.0:4000/ ，就可以看到我们搭建的个人博客了。 4. 部署到GitHub上本地搭建的博客，在预览后发现没什么问题。就可以部署到远程GitHub了。输入命令：1$ hexo d 部署上去后，打开之前创建的仓库，点击Settings。 往下找，找到GitHub Pages，将None改为master branch。点save保存。 然后用浏览器打开【你的用户名.github.io】就可以访问了。 关于更换主题虽然hexo有默认的主题，但是我们觉得有点丑，想更换主题，可以在好看的hexo主题里找一个自己喜欢的主题。然后下载保存到保存到Hexo目录下的themes文件夹下。 比如我使用的就是Litten的yilia主题。很漂亮的一个主题，具体设置可以参考他的README。别忘了Star！在这里我也对Litten表示感谢。 如何写新文章在Hexo目录下的source文件夹，所有的文章都会以md形式保存在_post文件夹中，我们只需在文件夹中新建自己的md文件就可以了。 总结总之，搭建博客需要很多的耐心，遇到问题，要善于使用搜索引擎来寻找自己问题的解决方法。耐着性子，多尝试几次。一定可以搭建成功自己的个人博客。 最后对 hexo 有不明白的，可以看hexo官网,官网里讲的很详细。对 Git 有不明白的，可以参考廖雪峰-Git教程。","tags":[{"name":"随笔","slug":"随笔","permalink":"www.animepc.me/tags/随笔/"}]},{"title":"第一篇博客","date":"2017-05-13T13:42:08.000Z","path":"2017/05/13/测试hexo/","text":"用于测试hexo博客的搭建这是我的第一篇博客，不知道该写些什么。就随便写写吧。 宇智波匆匆 1993.12 本科 陕西 最喜欢动漫 《火影忍者》《海贼王》《龙珠》","tags":[{"name":"测试hexo","slug":"测试hexo","permalink":"www.animepc.me/tags/测试hexo/"}]}]